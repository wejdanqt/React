{"ast":null,"code":"import _classCallCheck from\"/Users/wejdan/Desktop/react_todo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/wejdan/Desktop/react_todo/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/wejdan/Desktop/react_todo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/wejdan/Desktop/react_todo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/wejdan/Desktop/react_todo/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';export var TodoItem=/*#__PURE__*/function(_Component){_inherits(TodoItem,_Component);function TodoItem(){var _getPrototypeOf2;var _this;_classCallCheck(this,TodoItem);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(TodoItem)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.getStyle=function(){return{background:'#f4f4f4',padding:'10px',borderBottom:'1px #ccc dotted',textDecoration:_this.props.todo.completed?'line-through':'none'};};return _this;}_createClass(TodoItem,[{key:\"render\",value:function render(){var _this$props$todo=this.props.todo,id=_this$props$todo.id,title=_this$props$todo.title;return React.createElement(\"div\",{style:this.getStyle()},React.createElement(\"p\",null,React.createElement(\"input\",{type:\"checkbox\",onChange:this.props.markComplete.bind(this,id)}),\" \",' ',title,React.createElement(\"button\",{onClick:this.props.delTodo.bind(this,id),style:btnStyle},\"x\")));}}]);return TodoItem;}(Component);var btnStyle={background:'#ff0000',color:'#fff',border:'none',padding:'5px 9px',borderRadius:'50%',cursor:'pointer',float:'right'};export default TodoItem;","map":{"version":3,"sources":["/Users/wejdan/Desktop/react_todo/src/components/TodoItem.js"],"names":["React","Component","TodoItem","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","id","title","markComplete","bind","delTodo","btnStyle","color","border","borderRadius","cursor","float"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAGA,UAAaC,CAAAA,QAAb,uYACIC,QADJ,CACe,UAAM,CACb,MAAO,CACHC,UAAU,CAAE,SADT,CAEHC,OAAO,CAAE,MAFN,CAGHC,YAAY,CAAE,iBAHX,CAIHC,cAAc,CAAE,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,CACZ,cADY,CACK,MALlB,CAAP,CAOH,CATL,2EAYa,sBACkB,KAAKF,KAAL,CAAWC,IAD7B,CACGE,EADH,kBACGA,EADH,CACQC,KADR,kBACQA,KADR,CAEL,MACI,4BAAK,KAAK,CAAE,KAAKT,QAAL,EAAZ,EACI,6BACI,6BAAO,IAAI,CAAC,UAAZ,CAAuB,QAAQ,CAAE,KAAKK,KAAL,CAAWK,YAAX,CAAwBC,IAAxB,CAA6B,IAA7B,CAAmCH,EAAnC,CAAjC,EADJ,KACiF,GADjF,CAEKC,KAFL,CAGI,8BAAQ,OAAO,CAAE,KAAKJ,KAAL,CAAWO,OAAX,CAAmBD,IAAnB,CAAwB,IAAxB,CAA+BH,EAA/B,CAAjB,CAAqD,KAAK,CAAGK,QAA7D,MAHJ,CADJ,CADJ,CASH,CAvBL,sBAA8Bf,SAA9B,EAiCA,GAAMe,CAAAA,QAAQ,CAAG,CACbZ,UAAU,CAAC,SADE,CAEba,KAAK,CAAC,MAFO,CAGbC,MAAM,CAAE,MAHK,CAIbb,OAAO,CAAE,SAJI,CAKbc,YAAY,CAAE,KALD,CAMbC,MAAM,CAAE,SANK,CAObC,KAAK,CAAE,OAPM,CAAjB,CAUA,cAAenB,CAAAA,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n    getStyle = () => {\n        return {\n            background: '#f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            textDecoration: this.props.todo.completed ?\n                'line-through' : 'none'\n        }\n    }\n\n\n    render() {\n        const { id , title } = this.props.todo;\n        return (\n            <div style={this.getStyle()}>\n                <p>\n                    <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)} /> {' '}\n                    {title}\n                    <button onClick={this.props.delTodo.bind(this , id)} style={ btnStyle } >x</button>\n                </p>\n            </div>\n        )\n    }\n}\n\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    delTodo: PropTypes.func.isRequired\n}\n\n\nconst btnStyle = {\n    background:'#ff0000',\n    color:'#fff',\n    border: 'none',\n    padding: '5px 9px',\n    borderRadius: '50%',\n    cursor: 'pointer',\n    float: 'right'\n}\n\nexport default TodoItem\n"]},"metadata":{},"sourceType":"module"}